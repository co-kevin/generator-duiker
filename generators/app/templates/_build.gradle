buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply from: 'gradle/mybatis_generate.gradle'

group = '<%= groupCases.splitByDot %>'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

springBoot {
    mainClass = '<%= groupCases.splitByDot %>.<%= nameCases.splitByDot %>.<%= nameCases.hump %>Application'
    executable = true
    buildInfo()
}

repositories {
	mavenCentral()
}

ext {
    springCloudVersion = 'Dalston.SR4'
    springfox_version = '2.7.0'
}

configurations {
    mybatisGenerator
}

dependencies {
	// 自动生成 MyBatis 相关的依赖
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
    mybatisGenerator 'mysql:mysql-connector-java'

    compile('org.liquibase:liquibase-core')
    compile('com.baomidou:mybatisplus-spring-boot-starter:1.0.5')
    compile('com.baomidou:mybatis-plus:2.1.4')
    compile('javax.persistence:javax.persistence-api:2.2')
    compile('mysql:mysql-connector-java')

    compile("org.springframework.cloud:spring-cloud-starter-eureka-server"){
        exclude group:'javax.servlet'
    }
    compile("org.projectlombok:lombok:1.16.18")
    compile("io.springfox:springfox-swagger2:${springfox_version}")
    compile("io.springfox:springfox-swagger-ui:${springfox_version}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
